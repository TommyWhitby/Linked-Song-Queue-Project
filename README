PlayQueue

Overview
The PlayQueue class represents a queue of songs to be played. It provides methods for adding and removing songs, as well as for manipulating the order of songs in the queue. This class is designed to work with instances of the Song class.

Features
Adding Songs: The addSong(Song song) method adds a song to the end of the queue.
Removing Songs: The removeSong(Song song) method removes the first occurrence of a song from the queue, while the removeSong(int index) method removes a song at a specified index.
Queue Manipulation: Methods such as reverseQueue() and moveSong(int fromIndex, int amount) allow for manipulation of the song order within the queue.
Cycle Detection: The hasCycle() method checks for the presence of cycles in the queue.
Shuffling: The shuffledQueue(int p, int s) method creates a shuffled version of the queue based on a prime number p and a seed number s.

Usage
Initialization
PlayQueue playQueue = new PlayQueue();

Adding Songs
Song song = new Song("Title", "Artist", "Album", durationInSeconds);
playQueue.addSong(song);

Removing Songs
boolean removed = playQueue.removeSong(song);

Song removedSong = playQueue.removeSong(index);

Queue Manipulation
playQueue.reverseQueue();

playQueue.moveSong(fromIndex, amount);

Cycle Detection
boolean hasCycle = playQueue.hasCycle();

Shuffling
PlayQueue shuffledQueue = playQueue.shuffledQueue(p, s);

Methods
addSong(Song song): Adds a song to the end of the queue.
removeSong(Song song): Removes the first occurrence of a song from the queue.
removeSong(int index): Removes the song at the specified index from the queue.
size(): Returns the number of songs in the queue.
reverseQueue(): Reverses the order of songs in the queue.
moveSong(int fromIndex, int amount): Moves a song from one index to another by the specified amount.
swapSongs(int firstIndex, int secondIndex): Swaps the positions of two songs in the queue.
hasCycle(): Checks for the presence of cycles in the queue.
shuffledQueue(int p, int s): Creates a shuffled version of the queue based on a prime number p and a seed number s.
